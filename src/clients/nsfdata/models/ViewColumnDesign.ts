/* tslint:disable */
/* eslint-disable */
/**
 * NSF Data
 * NSF Data Connector provides access to any HCL Domino NSF database as well as IBM Domino NSF database (from version 9.0.1) for which Domino Access Services (DAS) are enabled. The Connector represents NSF databases, views, view entries, and documents in JSON format.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: nsf.data@databoat.ch
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ViewColumnDesign
 */
export interface ViewColumnDesign {
    /**
     * Position of the column in the view or folder, where 1 is the first column. 
     * @type {number}
     * @memberof ViewColumnDesign
     */
    columnnumber?: number;
    /**
     * The name of the column. 
     * @type {string}
     * @memberof ViewColumnDesign
     */
    name?: string;
    /**
     * The title of the column. 
     * @type {string}
     * @memberof ViewColumnDesign
     */
    title?: string;
    /**
     * The width of the column. 
     * @type {number}
     * @memberof ViewColumnDesign
     */
    width?: number;
    /**
     * The alignment of the column. 
     * @type {number}
     * @memberof ViewColumnDesign
     */
    alignment?: number;
    /**
     * `true` if the column is hidden. 
     * @type {boolean}
     * @memberof ViewColumnDesign
     */
    hidden?: boolean;
    /**
     * `true` if the column is for responses. 
     * @type {boolean}
     * @memberof ViewColumnDesign
     */
    response?: boolean;
    /**
     * `true` if the column is a twistie. 
     * @type {boolean}
     * @memberof ViewColumnDesign
     */
    twistie?: boolean;
    /**
     * `true` if the column is a field. 
     * @type {boolean}
     * @memberof ViewColumnDesign
     */
    field?: boolean;
    /**
     * `true` if the column is a category. 
     * @type {boolean}
     * @memberof ViewColumnDesign
     */
    category?: boolean;
}

export function ViewColumnDesignFromJSON(json: any): ViewColumnDesign {
    return ViewColumnDesignFromJSONTyped(json, false);
}

export function ViewColumnDesignFromJSONTyped(json: any, ignoreDiscriminator: boolean): ViewColumnDesign {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'columnnumber': !exists(json, '@columnnumber') ? undefined : json['@columnnumber'],
        'name': !exists(json, '@name') ? undefined : json['@name'],
        'title': !exists(json, '@title') ? undefined : json['@title'],
        'width': !exists(json, '@width') ? undefined : json['@width'],
        'alignment': !exists(json, '@alignment') ? undefined : json['@alignment'],
        'hidden': !exists(json, '@hidden') ? undefined : json['@hidden'],
        'response': !exists(json, '@response') ? undefined : json['@response'],
        'twistie': !exists(json, '@twistie') ? undefined : json['@twistie'],
        'field': !exists(json, '@field') ? undefined : json['@field'],
        'category': !exists(json, '@category') ? undefined : json['@category'],
    };
}

export function ViewColumnDesignToJSON(value?: ViewColumnDesign | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        '@columnnumber': value.columnnumber,
        '@name': value.name,
        '@title': value.title,
        '@width': value.width,
        '@alignment': value.alignment,
        '@hidden': value.hidden,
        '@response': value.response,
        '@twistie': value.twistie,
        '@field': value.field,
        '@category': value.category,
    };
}



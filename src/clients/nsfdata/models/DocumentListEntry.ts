/* tslint:disable */
/* eslint-disable */
/**
 * NSF Data
 * NSF Data Connector provides access to any HCL Domino NSF database as well as IBM Domino NSF database (from version 9.0.1) for which Domino Access Services (DAS) are enabled. The Connector represents NSF databases, views, view entries, and documents in JSON format.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: nsf.data@databoat.ch
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DocumentListEntry
 */
export interface DocumentListEntry {
    /**
     * The last modification date of the document.
     * @type {string}
     * @memberof DocumentListEntry
     */
    modified?: string;
    /**
     * The universal ID of the document.
     * @type {string}
     * @memberof DocumentListEntry
     */
    unid?: string;
    /**
     * The URL of the Document resource.
     * @type {string}
     * @memberof DocumentListEntry
     */
    href?: string;
    /**
     * The search score if this entry is in a search response.
     * @type {number}
     * @memberof DocumentListEntry
     */
    score?: number;
}

export function DocumentListEntryFromJSON(json: any): DocumentListEntry {
    return DocumentListEntryFromJSONTyped(json, false);
}

export function DocumentListEntryFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentListEntry {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'modified': !exists(json, '@modified') ? undefined : json['@modified'],
        'unid': !exists(json, '@unid') ? undefined : json['@unid'],
        'href': !exists(json, '@href') ? undefined : json['@href'],
        'score': !exists(json, '@score') ? undefined : json['@score'],
    };
}

export function DocumentListEntryToJSON(value?: DocumentListEntry | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        '@modified': value.modified,
        '@unid': value.unid,
        '@href': value.href,
        '@score': value.score,
    };
}



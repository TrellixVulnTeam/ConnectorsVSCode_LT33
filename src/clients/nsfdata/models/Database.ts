/* tslint:disable */
/* eslint-disable */
/**
 * NSF Data
 * NSF Data Connector provides access to any HCL Domino NSF database as well as IBM Domino NSF database (from version 9.0.1) for which Domino Access Services (DAS) are enabled. The Connector represents NSF databases, views, view entries, and documents in JSON format.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: nsf.data@databoat.ch
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Database
 */
export interface Database {
    /**
     * Title of the database.
     * @type {string}
     * @memberof Database
     */
    title?: string;
    /**
     * File path of the database relative to the Domino data directory.
     * @type {string}
     * @memberof Database
     */
    filepath?: string;
    /**
     * Replica ID of the database.
     * @type {string}
     * @memberof Database
     */
    replicaid?: string;
    /**
     * File name of the design template of the database, or an empty string if the database does not have a design template. 
     * @type {string}
     * @memberof Database
     */
    template?: string;
    /**
     * The URL of the view list resource for the database.
     * @type {string}
     * @memberof Database
     */
    href?: string;
}

export function DatabaseFromJSON(json: any): Database {
    return DatabaseFromJSONTyped(json, false);
}

export function DatabaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): Database {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'title': !exists(json, '@title') ? undefined : json['@title'],
        'filepath': !exists(json, '@filepath') ? undefined : json['@filepath'],
        'replicaid': !exists(json, '@replicaid') ? undefined : json['@replicaid'],
        'template': !exists(json, '@template') ? undefined : json['@template'],
        'href': !exists(json, '@href') ? undefined : json['@href'],
    };
}

export function DatabaseToJSON(value?: Database | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        '@title': value.title,
        '@filepath': value.filepath,
        '@replicaid': value.replicaid,
        '@template': value.template,
        '@href': value.href,
    };
}


